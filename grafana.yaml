apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"grafana","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"grafana"}},"template":{"metadata":{"labels":{"app":"grafana"}},"spec":{"automountServiceAccountToken":true,"containers":[{"env":[{"name":"FLAG","value":"flag{288232b2f03b1ec422c5dae50f14061f}"}],"image":"grafana/grafana-enterprise:8.3.0-beta2","imagePullPolicy":"IfNotPresent","name":"grafana","ports":[{"containerPort":3000}]}],"serviceAccount":"developer","serviceAccountName":"developer"}}}}
  # creationTimestamp: "2023-03-02T23:51:55Z"
  generation: 1
  name: grafana
  namespace: default
  resourceVersion: "894"
  uid: 2d68f0b7-7ef8-44ab-a626-5cf76f3d1ba3
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      # creationTimestamp: null
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: FLAG
          value: flag{288232b2f03b1ec422c5dae50f14061f}
        image: grafana/grafana-enterprise:8.3.0-beta2
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: developer
      serviceAccountName: developer
      terminationGracePeriodSeconds: 30